"""
Django settings for parfum_django project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config

from .swagger_settings import SWAGGER_SETTINGS


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)

ALLOWED_HOSTS = config("DJANGO_ALLOWED_HOSTS", default="*", cast=lambda v: [s.strip() for s in v.split(",")])


# Application definition

DJANGO_APPS = [
    "jazzmin",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    # UI            # –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å admin-interface
    "import_export",
    "ckeditor",
	
     # Debug
    "debug_toolbar",

    # REST
    "rest_framework",
    "corsheaders",
	
    #documentation
	"drf_yasg",

    # Polymorphic models
    "polymorphic",

    # Multilingual
    "parler",

    # SEO
    "meta",
]

LOCAL_APPS = [
	"products",
]


INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

CORS_ALLOW_ALL_ORIGINS = True


MIDDLEWARE = [
	"corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
	"debug_toolbar.middleware.DebugToolbarMiddleware", 
]

ROOT_URLCONF = 'parfum_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'parfum_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config("POSTGRES_DB"),
        "USER": config("POSTGRES_USER"),
        "PASSWORD": config("POSTGRES_PASSWORD"),
        "HOST": config("POSTGRES_HOST"),
        "PORT": config("POSTGRES_PORT"),
    }
}

#Rest Fraemwork

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticated",
    ),
}


#debug
INTERNAL_IPS = [
    "127.0.0.1",
]


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



#swagger settings

SPECTACULAR_SETTINGS = {
    'TITLE': 'My API',
    'DESCRIPTION': 'API for shop project',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'COMPONENT_SPLIT_REQUEST': True,
    'SERVE_PERMISSIONS': ['rest_framework.permissions.AllowAny'],

    # üëá –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É JWT
    'AUTHENTICATION_WHITELIST': [],
    'SECURITY': [
        {'BearerAuth': []},
    ],
    'COMPONENTS': {
        'securitySchemes': {
            'BearerAuth': {
                'type': 'http',
                'scheme': 'bearer',
                'bearerFormat': 'JWT',
            }
        }
    },
}


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LANGUAGE_CODE = "ru"

LANGUAGES = [
    ("en", "English"),
    ("ru", "–†—É—Å—Å–∫–∏–π"),
    ("tk", "T√ºrkmen√ße"),
]


PARLER_LANGUAGES = {
    None: (
        {"code": "en"},
        {"code": "ru"},
        {"code": "tk"},
    ),
    "default": {
        "fallbacks": ["ru"],
        "hide_untranslated": False,
    },
}






# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#ADmin UI settings

#jazzmin settings

JAZZMIN_SETTINGS = {
    "site_title": "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
    "site_header": "–ü–∞–Ω–µ–ª—å –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    "site_brand": "Parfum TM",
    # "site_logo": "main/icons/favicon.ico",
    "welcome_sign": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∫—É!",
    "copyright": "Parfum TM ¬© 2025",
    
    "search_model": "products.Product",  # –º–æ–¥–µ–ª—å –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    "topmenu_links": [
        {"name": "–ì–ª–∞–≤–Ω–∞—è",  "url": "/", "permissions": ["auth.view_user"]},
        {"name": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "url": "/docs/swagger/", "new_window": True},
    ],
    
    "show_sidebar": True,
    "navigation_expanded": True,
	
	"icons": {
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        'products.Product': "fas fa-box",
        'products.Category': "fas fa-tags",
        'products.Brand': "fas fa-copyright",
        'products.Variation': "fas fa-list",
        'products.Promotion': "fas fa-bullhorn",
    }
	
    
}


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "bg-dark text-light",       # —Ç—ë–º–Ω—ã–π navbar
    "accent": "#de524c",                        # –∞–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç –±—Ä–µ–Ω–¥–∞
    "navbar": "navbar-dark bg-dark",            # navbar —Ç—ë–º–Ω—ã–π
    "footer": "footer-dark bg-dark",            # —Ñ—É—Ç–µ—Ä —Ç—ë–º–Ω—ã–π
    "form_label_links": True,                   # —Å—Å—ã–ª–∫–∏ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –≤—ã–¥–µ–ª–µ–Ω—ã
    "modals": "modal-dark",                     # –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –≤ —Ç—ë–º–Ω–æ–π —Ç–µ–º–µ
    "actions_sticky_top": True,                 # –ø–∞–Ω–µ–ª—å –¥–µ–π—Å—Ç–≤–∏–π –≤—Å–µ–≥–¥–∞ —Å–≤–µ—Ä—Ö—É
    "show_ui_builder": True,                    # –≤–∏–¥–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
}




